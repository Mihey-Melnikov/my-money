import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove


class MyMoneyBot:
    def __init__(self, token, db_manager):
        self.bot = telebot.TeleBot(token)
        self.db_manager = db_manager
        self.add_handlers()
        self.buttons = {
            "category": "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é üóí",
            "income": "–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ üìà",
            "expense": "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ üìâ"
        }

    def main_menu(self):
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            KeyboardButton(self.buttons["category"]),
            KeyboardButton(self.buttons["income"]),
            KeyboardButton(self.buttons["expense"])
        )
        return keyboard

    def categories_menu(self, user_id):
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        categories = self.db_manager.get_categories(user_id)  # todo: —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for category in categories:
            keyboard.add(KeyboardButton(f"üóí {category.name}"))
        return keyboard

    def add_handlers(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            user = message.from_user
            self.db_manager.add_user(user.id, user.first_name)
            self.db_manager.update_user_state(message.from_user.id, None)
            self.db_manager.update_user_category(message.from_user.id, None)
            self.bot.send_message(
                message.chat.id,
                f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –≠—Ç–æ —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç-—Ç—Ä–µ–∫–µ—Ä.",
                reply_markup=self.main_menu()
            )

        @self.bot.message_handler(func=lambda message: message.text == self.buttons["income"])
        def add_income(message):
            if not self.db_manager.get_categories(message.from_user.id):
                self.bot.send_message(
                    message.chat.id,
                    "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π, —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                    reply_markup=self.categories_menu(message.from_user.id)
                )
                return
            self.db_manager.update_user_state(message.from_user.id, "income")
            self.bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                reply_markup=self.categories_menu(message.from_user.id)
            )

        @self.bot.message_handler(func=lambda message: message.text == self.buttons["expense"])
        def add_expense(message):
            if not self.db_manager.get_categories(message.from_user.id):
                self.bot.send_message(
                    message.chat.id,
                    "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π, —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                    reply_markup=self.categories_menu(message.from_user.id)
                )
                return
            self.db_manager.update_user_state(message.from_user.id, "expense")
            self.bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                reply_markup=self.categories_menu(message.from_user.id)
            )

        @self.bot.message_handler(func=lambda message: message.text == self.buttons["category"])
        def add_category(message):
            self.db_manager.update_user_state(message.from_user.id, "category")
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
                reply_markup=ReplyKeyboardRemove()
            )

        @self.bot.message_handler(func=lambda message: "üóí" in message.text)
        def add_transaction(message):
            self.db_manager.update_user_category(message.from_user.id, next(filter(lambda category: category.name in message.text, self.db_manager.get_categories(message.from_user.id)), None).id)
            user_state = self.db_manager.get_user(message.from_user.id).current_state
            self.bot.send_message(
                message.chat.id,
                f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É {'–¥–æ—Ö–æ–¥–∞' if user_state == 'income' else '—Ä–∞—Å—Ö–æ–¥–∞'}, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
                reply_markup=ReplyKeyboardRemove()
            )

        @self.bot.message_handler(content_types=['text'])
        def process_action(message):
            try:
                user = self.db_manager.get_user(message.from_user.id)

                if user.current_state == 'income':
                    income_data = message.text.split(',')
                    amount = float(income_data[0].strip())
                    description = income_data[1].strip()
                    self.db_manager.add_transaction(user.telegram_id, amount, description, user.selected_category)
                    self.bot.send_message(message.chat.id, "–î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=self.main_menu())

                elif user.current_state == 'expense':
                    expense_data = message.text.split(',')
                    amount = -float(expense_data[0].strip())
                    description = expense_data[1].strip()
                    self.db_manager.add_transaction(user.telegram_id, amount, description, user.selected_category)
                    self.bot.send_message(message.chat.id, "–†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=self.main_menu())

                elif user.current_state == 'category':
                    category_data = message.text.split(',')
                    name = category_data[0].strip()
                    description = category_data[1].strip()
                    self.db_manager.add_category(user.telegram_id, name, description)
                    self.bot.send_message(message.chat.id, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!", reply_markup=self.main_menu())

                self.db_manager.update_user_state(message.from_user.id, None)
                self.db_manager.update_user_category(message.from_user.id, None)

            except Exception as e:
                self.bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=self.main_menu())
                self.db_manager.update_user_state(message.from_user.id, None)
                self.db_manager.update_user_category(message.from_user.id, None)
                print(e)

    def run(self):
        self.bot.polling()
